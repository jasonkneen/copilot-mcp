{
  "name": "copilot-mcp",
  "author": {
    "email": "vikash@automatalabs.io",
    "name": "Vikash Loomba",
    "url": "https://automatalabs.io"
  },
  "publisher": "AutomataLabs",
  "repository": {
    "url": "https://github.com/vikashloomba/copilot-mcp",
    "type": "git"
  },
  "displayName": "Copilot MCP",
  "description": "VSCode extension that acts as a Model Context Protocol (MCP) client, enabling integration between MCP servers and GitHub Copilot Chat",
  "version": "0.0.13",
  "icon": "logo.png",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "AI",
    "Chat",
    "Programming Languages",
    "Education",
    "Snippets",
    "Testing"
  ],
  "keywords": [
    "chat-participant",
    "copilot",
    "copilot-mcp",
    "chat-participant-utils",
    "dev",
    "mcp",
    "openrouter",
    "coding",
    "agent",
    "autonomous",
    "chatgpt",
    "sonnet",
    "ai",
    "llama"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "extensionDependencies": [
    "github.copilot-chat"
  ],
  "contributes": {
    "chatParticipants": [
      {
        "id": "copilot-mcp.mcp",
        "fullName": "MCP Agent",
        "name": "mcp",
        "description": "Agent with access to Model Context Protocol (MCP) servers",
        "isSticky": true,
        "commands": [
          {
            "name": "listResources",
            "description": "Retrieve resources from your MCP servers"
          }
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "mcpServers",
          "title": "MCP Servers",
          "icon": "resources/light/server.svg"
        }
      ]
    },
    "views": {
      "mcpServers": [
        {
          "type": "webview",
          "id": "mcpServerManager",
          "name": "Server Manager",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "copilot-mcp.openServerManager",
        "title": "Open MCP Server Manager"
      },
      {
        "command": "copilot-mcp.migrateServerConfigurations",
        "title": "MCP: Migrate Server Configurations to Latest Format"
      }
    ],
    "configuration": {
      "title": "MCP Manager",
      "properties": {
        "mcpManager.servers": {
          "type": "array",
          "default": [],
          "description": "List of configured MCP servers",
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "command",
              "enabled"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the server"
              },
              "name": {
                "type": "string",
                "description": "Display name for the server"
              },
              "command": {
                "type": "string",
                "description": "Command to start the server"
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the server is enabled"
              }
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "deploy": "vsce publish",
    "package-extension": "vsce package",
    "prepare-hooks": "chmod +x ./scripts/git-hooks/install-hooks.sh && ./scripts/git-hooks/install-hooks.sh"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.17.19",
    "@types/react": "^18.2.55",
    "@types/react-dom": "^18.2.19",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.2",
    "autoprefixer": "^10.4.20",
    "css-loader": "^7.1.2",
    "eslint": "^9.19.0",
    "postcss": "^8.5.2",
    "postcss-loader": "^8.1.1",
    "style-loader": "^4.0.0",
    "tailwindcss": "^4.0.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.7.3",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.5.0",
    "@radix-ui/react-collapsible": "^1.1.3",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slot": "^1.1.2",
    "@radix-ui/react-switch": "^1.1.3",
    "@tailwindcss/postcss": "^4.0.6",
    "@vscode/chat-extension-utils": "^0.0.0-alpha.5",
    "@vscode/prompt-tsx": "^0.3.0-alpha.19",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.475.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7"
  }
}
